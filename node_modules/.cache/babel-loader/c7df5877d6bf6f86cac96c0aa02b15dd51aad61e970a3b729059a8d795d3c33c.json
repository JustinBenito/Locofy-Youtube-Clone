{"ast":null,"code":"export const listWithLogos = async result => {\n  const fetchLogo = async channel_id => {\n    var URL = `https://youtube.googleapis.com/youtube/v3/channels?part=snippet&part=statistics&id=${channel_id}&key=${process.env.REACT_APP_API_KEY}`;\n    const res = await fetch(URL, {\n      method: \"GET\",\n      //Method of https request\n      headers: {}\n    });\n    //the resultant json is stored into the data\n    const logodata = await res.json();\n    let logo = logodata.items[0].snippet.thumbnails.default.url;\n    // console.log(logo)\n    return logo;\n  };\n  let v = result === null || result === void 0 ? void 0 : result.items;\n  v = v.map(async item => {\n    item.logo = await fetchLogo(item.snippet.channelId);\n    return item;\n  });\n  let finalList = await Promise.all(v).then(res => {\n    return res;\n  });\n  return finalList;\n};\nexport const listWithStatistics = async videoList => {\n  let initValue = '';\n  const videosId = videoList.reduce((accumulator, currentValue) => {\n    var _currentValue$id, _currentValue$id2;\n    console.log(currentValue);\n    if (accumulator) return accumulator + ',' + (currentValue === null || currentValue === void 0 ? void 0 : (_currentValue$id = currentValue.id) === null || _currentValue$id === void 0 ? void 0 : _currentValue$id.videoId);else return currentValue === null || currentValue === void 0 ? void 0 : (_currentValue$id2 = currentValue.id) === null || _currentValue$id2 === void 0 ? void 0 : _currentValue$id2.videoId;\n  }, initValue);\n  let r = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=statistics&id=${videosId}&key=${process.env.REACT_APP_API_KEY}`).then(res => res.json());\n  videoList = videoList.map((item, i) => {\n    // console.log(r.items[i].statistics)\n    item.statistics = r.items[i].statistics;\n    return item;\n  });\n  return videoList;\n};","map":{"version":3,"names":["listWithLogos","result","fetchLogo","channel_id","URL","process","env","REACT_APP_API_KEY","res","fetch","method","headers","logodata","json","logo","items","snippet","thumbnails","default","url","v","map","item","channelId","finalList","Promise","all","then","listWithStatistics","videoList","initValue","videosId","reduce","accumulator","currentValue","console","log","id","videoId","r","i","statistics"],"sources":["/Users/justinbenito/Justin Benito/Locofy/Locofy Youtube Project/Locofy-Youtube-Clone/src/utils/getMeta.js"],"sourcesContent":["export const listWithLogos = async (result) => {\n\n\n    const fetchLogo = async (channel_id) => {\n        var URL = `https://youtube.googleapis.com/youtube/v3/channels?part=snippet&part=statistics&id=${channel_id}&key=${process.env.REACT_APP_API_KEY}`;\n        const res = await fetch(URL, {\n            method: \"GET\", //Method of https request\n            headers: {},\n        });\n        //the resultant json is stored into the data\n        const logodata = await res.json();\n        let logo = logodata.items[0].snippet.thumbnails.default.url;\n        // console.log(logo)\n        return logo;\n    };\n    let v = result?.items;\n    v = v.map(async item => {\n        item.logo = await fetchLogo(item.snippet.channelId)\n        return item\n    })\n\n    let finalList = await Promise.all(v).then((res) => {\n        \n        return res\n    })\n    return finalList\n}\nexport const listWithStatistics = async (videoList) => {\n\n    let initValue = ''\n    const videosId = videoList.reduce(\n        ((accumulator, currentValue) => {\n            console.log(currentValue)\n            if (accumulator)\n                return accumulator + ',' + currentValue?.id?.videoId\n            else return currentValue?.id?.videoId\n        }),\n        initValue\n    );\n    let r = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=statistics&id=${videosId}&key=${process.env.REACT_APP_API_KEY}`).then(res => res.json())\n    \n    videoList = videoList.map((item, i) => {\n        // console.log(r.items[i].statistics)\n        item.statistics = r.items[i].statistics\n        return item\n    })\n    \n    return videoList\n}"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,MAAOC,MAAM,IAAK;EAG3C,MAAMC,SAAS,GAAG,MAAOC,UAAU,IAAK;IACpC,IAAIC,GAAG,GAAI,sFAAqFD,UAAW,QAAOE,OAAO,CAACC,GAAG,CAACC,iBAAkB,EAAC;IACjJ,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;MACzBM,MAAM,EAAE,KAAK;MAAE;MACfC,OAAO,EAAE,CAAC;IACd,CAAC,CAAC;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;IACjC,IAAIC,IAAI,GAAGF,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,UAAU,CAACC,OAAO,CAACC,GAAG;IAC3D;IACA,OAAOL,IAAI;EACf,CAAC;EACD,IAAIM,CAAC,GAAGnB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEc,KAAK;EACrBK,CAAC,GAAGA,CAAC,CAACC,GAAG,CAAC,MAAMC,IAAI,IAAI;IACpBA,IAAI,CAACR,IAAI,GAAG,MAAMZ,SAAS,CAACoB,IAAI,CAACN,OAAO,CAACO,SAAS,CAAC;IACnD,OAAOD,IAAI;EACf,CAAC,CAAC;EAEF,IAAIE,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,CAAC,CAAC,CAACO,IAAI,CAAEnB,GAAG,IAAK;IAE/C,OAAOA,GAAG;EACd,CAAC,CAAC;EACF,OAAOgB,SAAS;AACpB,CAAC;AACD,OAAO,MAAMI,kBAAkB,GAAG,MAAOC,SAAS,IAAK;EAEnD,IAAIC,SAAS,GAAG,EAAE;EAClB,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAM,CAC5B,CAACC,WAAW,EAAEC,YAAY,KAAK;IAAA;IAC5BC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IACzB,IAAID,WAAW,EACX,OAAOA,WAAW,GAAG,GAAG,IAAGC,YAAY,aAAZA,YAAY,2CAAZA,YAAY,CAAEG,EAAE,qDAAhB,iBAAkBC,OAAO,OACnD,OAAOJ,YAAY,aAAZA,YAAY,4CAAZA,YAAY,CAAEG,EAAE,sDAAhB,kBAAkBC,OAAO;EACzC,CAAC,EACDR,SAAS,CACZ;EACD,IAAIS,CAAC,GAAG,MAAM9B,KAAK,CAAE,mEAAkEsB,QAAS,QAAO1B,OAAO,CAACC,GAAG,CAACC,iBAAkB,EAAC,CAAC,CAACoB,IAAI,CAACnB,GAAG,IAAIA,GAAG,CAACK,IAAI,EAAE,CAAC;EAE/JgB,SAAS,GAAGA,SAAS,CAACR,GAAG,CAAC,CAACC,IAAI,EAAEkB,CAAC,KAAK;IACnC;IACAlB,IAAI,CAACmB,UAAU,GAAGF,CAAC,CAACxB,KAAK,CAACyB,CAAC,CAAC,CAACC,UAAU;IACvC,OAAOnB,IAAI;EACf,CAAC,CAAC;EAEF,OAAOO,SAAS;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}